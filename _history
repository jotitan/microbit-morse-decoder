{"entries":[{"timestamp":1731359843841,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"function cutWords() {\n    let listWords = \"\"\n    let currentWord: int16[] = [];\n    for (let i = 0; i <= signs.length - 1; i++) {\n        if (i != 0 && signs[i][\"previousPressed\"] >= 4) {\n            // end word\n            listWords += analyseWord(currentWord) + \" \"\n            currentWord = []\n        }\n        currentWord.push(signs[i][\"during\"])\n    }\n    listWords += analyseWord(currentWord)\n    basic.showString(listWords)\n}\nfunction showOK() {\n    // basic.showLeds(\"00010\\n01001\\n00001\\n01001\\n00010\")\n    basic.showLeds(`\n        . # . # .\n        . . . . .\n        . . . . .\n        # . . . #\n        . # # # .\n        `)\n}\ninput.onLogoEvent(TouchButtonEvent.Released, () => signs = [])\ninput.onButtonPressed(Button.B, function () {\n    cutWords()\n})\nfunction analyseWord(letter: number[]) {\n    if (letter.length == 0) {\n        return \"\"\n    }\n    let morseWord = \"\"\n    for (let j = 0; j <= letter.length - 1; j++) {\n        morseWord += letter[j] >= 3 ? \"-\" : \".\"\n    }\n    //console.log(morseWord)\n    if (morseTable[morseWord as keyof string] != null) {\n        return morseTable[morseWord as keyof string]\n    }\n    return \"\"\n}\nfunction showKO() {\n    // basic.showLeds(\"00001\\n01010\\n00010\\n01010\\n00001\")\n    basic.showLeds(`\n        . # . # .\n        . . . . .\n        . . . . .\n        . # # # .\n        # . . . #\n        `)\n}\n\nlet signs: Mark[] = []\nlet pressed = false\nlet lastPressed = 0\nlet previousPressed: number = 0\nlet timeBeginPressed: number;\n\nclass Mark {\n    during: int16\n    previousPressed: int16\n}\ntype MapString = {\n    [id: string]: string\n}\n\nconst morseTable: MapString = {\n    \".-\": \"A\",\n    \"-...\": \"B\",\n    \"-.-.\": \"C\",\n    \"-..\": \"D\",\n    \".\": \"E\",\n    \"..-.\": \"F\",\n    \"--.\": \"G\",\n    \"....\": \"H\",\n    \"..\": \"I\",\n    \".---\": \"J\",\n    \"-.-\": \"K\",\n    \".-..\": \"L\",\n    \"--\": \"M\",\n    \"-.\": \"N\",\n    \"---\": \"O\",\n    \".--.\": \"P\",\n    \"--.-\": \"Q\",\n    \".-.\": \"R\",\n    \"...\": \"S\",\n    \"-\": \"T\",\n    \"..-\": \"U\",\n    \"...-\": \"V\",\n    \".--\": \"W\",\n    \"-..-\": \"X\",\n    \"-.--\": \"Y\",\n    \"--..\": \"Z\",\n    \"-----\": \"0\",\n    \".----\": \"1\",\n    \"..---\": \"2\",\n    \"...--\": \"3\",\n    \"....-\": \"4\",\n    \".....\": \"5\",\n    \"-....\": \"6\",\n    \"--...\": \"7\",\n    \"---..\": \"8\",\n    \"----.\": \"9\",\n}\nlet brightness = 100;\nlet direction = 10;\nbasic.forever(function () {\n    //pulseBright()\n    if (!(pressed) && input.buttonIsPressed(Button.A)) {\n        lastPressed = 0\n        timeBeginPressed = input.runningTime()\n        pressed = true\n    } else {\n        if (pressed && !(input.buttonIsPressed(Button.A))) {\n            pressed = false\n            lastPressed = input.runningTime() - timeBeginPressed\n            signs.push({ during: Math.round(lastPressed / 100), previousPressed: Math.round((timeBeginPressed - previousPressed) / 100) })\n            previousPressed = input.runningTime()\n        }\n    }\n})\n\nfunction pulseBright() {\n    if ((direction === 10 && brightness > 255) || (direction === -10 && brightness < 10)) {\n        direction *= -1;\n    }\n    brightness += direction;\n    led.setBrightness(brightness);\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":3049,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":208,"start2":208,"length1":52,"length2":8},{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":280,"start2":280,"length1":11,"length2":42}]},{"type":"added","filename":"test.ts","value":"// les tests vont ici ; cela ne sera pas compilé si ce paquet est utilisé en tant qu'extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1731359843840,"editorVersion":"7.0.51","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Morse decode\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1731359941424}